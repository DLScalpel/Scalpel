{
  "model_inf": "from:0 to:1 operator:identity  from:0 to:4 operator:conv2D_transpose  from:0 to:9 operator:1*1  from:1 to:2 operator:identity  from:2 to:3 operator:identity  from:2 to:4 operator:conv2D_transpose  from:2 to:7 operator:ReLU  from:3 to:4 operator:identity  from:4 to:5 operator:sigmoid  from:4 to:9 operator:PReLU  from:5 to:6 operator:identity  from:5 to:7 operator:average_pooling2D  from:5 to:8 operator:conv2D  from:6 to:7 operator:identity  from:7 to:8 operator:identity  from:8 to:9 operator:identity  ",
  "error_message": "\n\n--------------------------------------\nC++ Traceback (most recent call last):\n--------------------------------------\n0   run_program_ad_func(std::vector<Tensor, std::allocator<Tensor> > const&, std::vector<Tensor, std::allocator<Tensor> > const&, std::vector<Tensor*, std::allocator<Tensor*> >&, std::vector<framework::Scope*, std::allocator<framework::Scope*> >&, std::unordered_map<std::string, variant<blank, int, float, std::string, std::vector<int, std::allocator<int> >, std::vector<float, std::allocator<float> >, std::vector<std::string, std::allocator<std::string > >, bool, std::vector<bool, std::allocator<bool> >, framework::BlockDesc*, long, std::vector<framework::BlockDesc*, std::allocator<framework::BlockDesc*> >, std::vector<long, std::allocator<long> >, std::vector<double, std::allocator<double> >, framework::VarDesc*, std::vector<framework::VarDesc*, std::allocator<framework::VarDesc*> >, double, experimental::ScalarBase<Tensor>, std::vector<experimental::ScalarBase<Tensor>, std::allocator<experimental::ScalarBase<Tensor> > >, pir::Block*, std::vector<pir::Value, std::allocator<pir::Value> > >, std::hash<std::string >, std::equal_to<std::string >, std::allocator<std::pair<std::string const, variant<blank, int, float, std::string, std::vector<int, std::allocator<int> >, std::vector<float, std::allocator<float> >, std::vector<std::string, std::allocator<std::string > >, bool, std::vector<bool, std::allocator<bool> >, framework::BlockDesc*, long, std::vector<framework::BlockDesc*, std::allocator<framework::BlockDesc*> >, std::vector<long, std::allocator<long> >, std::vector<double, std::allocator<double> >, framework::VarDesc*, std::vector<framework::VarDesc*, std::allocator<framework::VarDesc*> >, double, experimental::ScalarBase<Tensor>, std::vector<experimental::ScalarBase<Tensor>, std::allocator<experimental::ScalarBase<Tensor> > >, pir::Block*, std::vector<pir::Value, std::allocator<pir::Value> > > > > > const&)\n1   RunProgramAPI(std::vector<Tensor, std::allocator<Tensor> > const&, std::vector<Tensor, std::allocator<Tensor> > const&, std::vector<Tensor*, std::allocator<Tensor*> >&, std::vector<framework::Scope*, std::allocator<framework::Scope*> >&, bool, std::unordered_map<std::string, variant<blank, int, float, std::string, std::vector<int, std::allocator<int> >, std::vector<float, std::allocator<float> >, std::vector<std::string, std::allocator<std::string > >, bool, std::vector<bool, std::allocator<bool> >, framework::BlockDesc*, long, std::vector<framework::BlockDesc*, std::allocator<framework::BlockDesc*> >, std::vector<long, std::allocator<long> >, std::vector<double, std::allocator<double> >, framework::VarDesc*, std::vector<framework::VarDesc*, std::allocator<framework::VarDesc*> >, double, experimental::ScalarBase<Tensor>, std::vector<experimental::ScalarBase<Tensor>, std::allocator<experimental::ScalarBase<Tensor> > >, pir::Block*, std::vector<pir::Value, std::allocator<pir::Value> > >, std::hash<std::string >, std::equal_to<std::string >, std::allocator<std::pair<std::string const, variant<blank, int, float, std::string, std::vector<int, std::allocator<int> >, std::vector<float, std::allocator<float> >, std::vector<std::string, std::allocator<std::string > >, bool, std::vector<bool, std::allocator<bool> >, framework::BlockDesc*, long, std::vector<framework::BlockDesc*, std::allocator<framework::BlockDesc*> >, std::vector<long, std::allocator<long> >, std::vector<double, std::allocator<double> >, framework::VarDesc*, std::vector<framework::VarDesc*, std::allocator<framework::VarDesc*> >, double, experimental::ScalarBase<Tensor>, std::vector<experimental::ScalarBase<Tensor>, std::allocator<experimental::ScalarBase<Tensor> > >, pir::Block*, std::vector<pir::Value, std::allocator<pir::Value> > > > > > const&)\n2   framework::InterpreterCore::Run(std::vector<std::string, std::allocator<std::string > > const&, bool, bool, bool)\n3   framework::ProgramInterpreter::Run(std::vector<std::string, std::allocator<std::string > > const&, bool, bool, bool)\n4   framework::ProgramInterpreter::Build(std::vector<std::string, std::allocator<std::string > > const&, std::vector<framework::OpFuncNode, std::allocator<framework::OpFuncNode> >*)\n5   framework::interpreter::BuildOpFuncList(phi::Place const&, framework::BlockDesc const&, std::set<std::string, std::less<std::string >, std::allocator<std::string > > const&, std::vector<framework::OpFuncNode, std::allocator<framework::OpFuncNode> >*, framework::VariableScope*, framework::interpreter::ExecutionConfig const&, std::vector<std::function<void (framework::OperatorBase*, framework::Scope*)>, std::allocator<std::function<void (framework::OperatorBase*, framework::Scope*)> > > const&, std::vector<std::function<void (framework::OperatorBase*, framework::Scope*)>, std::allocator<std::function<void (framework::OperatorBase*, framework::Scope*)> > > const&, bool, bool)\n6   phi::KernelImpl<void (*)(phi::GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::string const&, std::vector<int, std::allocator<int> > const&, int, std::string const&, phi::DenseTensor*), &(void phi::ConvCudnnKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::string const&, std::vector<int, std::allocator<int> > const&, int, std::string const&, phi::DenseTensor*))>::Compute(phi::KernelContext*)\n7   void phi::ConvCudnnKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::string const&, std::vector<int, std::allocator<int> > const&, int, std::string const&, phi::DenseTensor*)\n8   float* phi::DeviceContext::Alloc<float>(phi::TensorBase*, unsigned long, bool) const\n9   phi::DeviceContext::Impl::Alloc(phi::TensorBase*, phi::Place const&, phi::DataType, unsigned long, bool, bool) const\n10  phi::DenseTensor::AllocateFrom(phi::Allocator*, phi::DataType, unsigned long, bool)\n11  memory::allocation::Allocator::Allocate(unsigned long)\n12  memory::allocation::StatAllocator::AllocateImpl(unsigned long)\n13  memory::allocation::Allocator::Allocate(unsigned long)\n14  memory::allocation::Allocator::Allocate(unsigned long)\n15  memory::allocation::Allocator::Allocate(unsigned long)\n16  memory::allocation::Allocator::Allocate(unsigned long)\n17  memory::allocation::CUDAAllocator::AllocateImpl(unsigned long)\n18  std::string phi::enforce::GetCompleteTraceBackString<std::string >(std::string&&, char const*, int)\n19  phi::enforce::GetCurrentTraceBackString[abi:cxx11](bool)\n\n----------------------\nError Message Summary:\n----------------------\nResourceExhaustedError: \n\nOut of memory error on GPU 0. Cannot allocate 506.250000MB memory on GPU 0, 14.305664GB memory has been allocated and available memory is only 279.312500MB.\n"
}